{"version":3,"sources":["src/app/firebase.js","src/app/api-consultas.js","src/app/provider.js","src/components/GridItem.js","src/screens/Home.js","src/components/ProductoItem.js","src/screens/Productos.js","styles.js","src/screens/Details.js","src/constants/color.js","src/navigation/stacks/index.js","src/screens/Car.js","src/navigation/stacks/CarNavigator.js","src/app/orders-firebase.js","src/app/api.js","src/screens/Orders.js","src/navigation/stacks/OrdersNavigator.js","src/navigation/tabs/index.js","src/screens/Register.js","src/screens/Login.js","src/navigation/stacks/auth.js","src/navigation/index.js","App.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","db","getFirestore","auth","getAuth","setPersistence","browserLocalPersistence","itemsCollection","collection","getArrayFromCollection","docs","map","doc","data","id","Provider","children","useState","state","setState","isInCart","producto","filter","productoInCar","item","length","AppContext","value","newItem","cantidad","items","find","createContext","style","StyleSheet","create","gridItem","flex","borderRadius","margin","height","marginBottom","container","shadowColor","shadowOpacity","shadowOffset","width","shadowRadius","elevation","justifyContent","alignItems","padding","title","fontFamily","display","fontWeight","fontSize","button","paddingHorizontal","paddingVertical","textAlign","backgroundColor","borderColor","textButton","color","lineHeight","flexDirection","marginRight","marginLeft","GridItem","onSelected","navigation","useContext","addToCart","View","Text","onPress","navigate","Home","setItems","useEffect","a","async","getDocs","query","result","getItems","then","obj","handleSelectedCategory","prod","renderItem","keyExtractor","numColumns","styles","Item","alignSelf","details","marginTop","ProductoItem","price","stock","TouchableOpacity","Productos","route","params","productID","name","description","picture","pictureUrl","maxWidth","minWidth","border","input","buttonOrders","buttonDelete","borderWidth","textButtonDelete","div","text","textTitle","textEmail","pad10","cardText","container2","margin10","addItems","alertDanger","position","container3","titleDetail","imgDetail","resizeMode","Details","Image","source","uri","COLORS","Stack","createStackNavigator","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","options","Car","removeItem","i","reduce","acc","signUp","email","password","createUserWithEmailAndPassword","userCredential","user","setDoc","uid","signIn","signInWithEmailAndPassword","logout","signOut","Orders","arr","currentUser","setName","phone","setPhone","setEmail","ordenCompra","buyer","date","Date","TextInput","placeholder","onChangeText","addDoc","Tab","createBottomTabNavigator","tabBarShowLabel","tabBarStyle","tabBar","headerRight","props","Ionicons","size","textLogout","Stacks","tabBarIcon","focused","Tabs","bottom","left","right","paddingBottom","Register","setPassword","keyboardType","Login","headerShown","Nav","isLogged","setIsLogged","onAuthStateChanged","NavigationContainer","App"],"mappings":"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","file":"static/js/app.e695ec02.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getAuth, setPersistence, browserLocalPersistence } from 'firebase/auth';\r\nimport { REACT_APP_PROJECT_ID, REACT_APP_API_KEY } from '@env';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_PROJECT_ID + '.firebaseapp.com',\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_PROJECT_ID + \".appspot.com\",\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport const db = getFirestore();\r\nexport const auth = getAuth(firebaseApp);\r\n\r\n// Si descomentas la siguiente línea, cuando mientras que el usuario no se desloguee expresamente o cierre el navegador, permanecerá logueado y podremos acceder a su id desde cualquier página\r\nsetPersistence(auth, browserLocalPersistence);","import { collection, getDocs, query, doc, getDoc, addDoc, deleteDoc, updateDoc, setDoc, where } from \"firebase/firestore\";\r\nimport { db } from './firebase';\r\n\r\nconst itemsCollection = collection(db, 'items');\r\n\r\n// CREATE\r\nexport const createItem= (obj) => {\r\n    return addDoc(itemsCollection, obj).id;\r\n}\r\n\r\n// UPDATE\r\nexport const updateItem = async (id, obj) => {\r\n    await updateDoc(doc(itemsCollection, id), obj)\r\n}\r\n\r\n// READ\r\nexport const getItems= async ()  => {\r\n    const result = await getDocs(query(itemsCollection));\r\n    return getArrayFromCollection(result);\r\n}\r\n\r\n// READ WITH WHERE\r\n// Tener en cuenta que el tipo de dato de la condición debe coincidir con el tipo de dato que hay en Firebase o no obtendré un dato de respuesta\r\nexport const getItemsByCondition = async (value) => {\r\n    const result = await getDocs(query(itemsCollection , where('age', '==', value)));\r\n    return getArrayFromCollection(result);\r\n}\r\n\r\nexport const getItemById = async (id) => {\r\n    const result = await getDoc(doc(itemsCollection, id));\r\n    return result.data();\r\n}\r\n\r\n// DELETE\r\nexport const deleteItem = async (id) => {\r\n    await deleteDoc(doc(itemsCollection, id));\r\n}\r\n\r\nconst getArrayFromCollection = (collection) => {\r\n    return collection.docs.map(doc => {\r\n        return { ...doc.data(), id: doc.id };\r\n    });\r\n}","import {createContext,useState} from 'react';\r\n\r\nconst Provider = ({ children }) =>{\r\n    const [state,setState] = useState([]);\r\n\r\n    const addItem = (newItem, cantidad) => {\r\n        !items.find(item => item.id === newItem.id) && setState([...items, {...newItem, cantidad}]);\r\n    };\r\n\r\n    const removeItem = id => {\r\n        setState(state.filter(item => item.id !== id))\r\n    };\r\n\r\n    const clear = () => setState([]);\r\n    // const isInCart = (id) => items.find(item => item.id === id) ? true : false;\r\n\r\n    const isInCart = (producto) => {\r\n        return state.filter(productoInCar => productoInCar.id === producto.item.id).length !== 0 ? true : false;\r\n    }\r\n\r\n    const addToCart = (producto) => {\r\n        if(isInCart(producto)) return\r\n        else setState([...state, producto.item])\r\n    }\r\n\r\n    return (            \r\n            <AppContext.Provider value={[state,setState, addItem, removeItem, clear, isInCart, addToCart]}>\r\n                {children}\r\n            </AppContext.Provider>  \r\n    );\r\n}\r\n\r\nexport default Provider;\r\nexport const AppContext = createContext();","import React, {useContext} from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { AppContext } from '../app/provider';\r\n\r\nconst GridItem = ({item, onSelected, navigation}) => {\r\n\r\n  const [state,setState, addItem, removeItem, clear, isInCart, addToCart] = useContext(AppContext);\r\n\r\n  return (\r\n    <View style={style.gridItem}>\r\n      <View style={{...style.container, backgroundColor: item.color, borderRadius: '6px'}}>\r\n        <Text style={style.title}>{item.title}</Text>\r\n        <View style={style.flex}>\r\n          <TouchableOpacity style={style.button} onPress={() => onSelected(item) }><Text style={style.textButton}>Ver Producto</Text></TouchableOpacity>\r\n          <TouchableOpacity style={[style.button, style.marginLeft]} \r\n            onPress={() => {\r\n                // setState([...state, {...state, item}]);\r\n                addToCart({item});\r\n                navigation.navigate('Carrito');\r\n            }}>\r\n            <Text style={style.textButton}>Agregar al Carrito</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n  gridItem: {\r\n    flex: 1,\r\n    borderRadius: '6px',\r\n    margin: '15px',\r\n    height: '150px',\r\n    marginBottom: '50px',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    borderRadius: '6px',\r\n    shadowColor: 'black',\r\n    shadowOpacity: '0.26',\r\n    shadowOffset: {width: 0, height: 2},\r\n    shadowRadius: '6px',\r\n    elevation: 3,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n    padding: '8px',\r\n    height: '100%',\r\n  },\r\n  title: {\r\n    fontFamily: 'sans-serif',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n    display: 'flex',\r\n    padding: '20px',\r\n    fontWeight: '600',\r\n    height: '150px',\r\n    fontSize: 18,\r\n  },\r\n  button: {\r\n    paddingHorizontal: '0.75rem',\r\n    paddingVertical: '0.375rem',\r\n    borderRadius: '0.25rem',\r\n    textAlign: 'center',\r\n    backgroundColor: 'white',\r\n    borderColor: 'white',\r\n  },\r\n  textButton: {\r\n    color: 'black',\r\n    fontSize: '1rem',\r\n    lineHeight: '1.5',\r\n    fontWeight: '400',\r\n  },\r\n  flex: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    marginBottom: '10px',\r\n    marginRight: '10px',\r\n  },\r\n  marginLeft: {\r\n    marginLeft: '15px',\r\n  }\r\n});\r\n\r\nexport default GridItem","import React, {useState, useEffect } from 'react';\r\nimport { View} from 'react-native'\r\nimport { FlatList } from 'react-native-gesture-handler';\r\nimport { getItems } from '../app/api-consultas';\r\nimport GridItem from '../components/GridItem';\r\n\r\nconst Home = ({ navigation }) => {\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getItems().then( obj => {\r\n      setItems(obj);\r\n    });\r\n  }, [])\r\n\r\n  const handleSelectedCategory = (item) => {\r\n    navigation.navigate('Productos', {\r\n      prod: item\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <View>\r\n      <FlatList\r\n        data = { items }\r\n        renderItem = { ({item}) => <GridItem onSelected={handleSelectedCategory} item={item} navigation = {navigation} />}\r\n        keyExtractor = {item => item.id}\r\n        numColumns = {2} \r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, Text } from 'react-native';\r\n\r\nconst ProductoItem = ({item, onSelected}) => {\r\n\r\n  return (\r\n    <View style={styles.Item}>\r\n      <View>\r\n        <Text style={styles.title}>{item.title}</Text>\r\n      </View>\r\n      <View>\r\n        <Text style={styles.details}>Precio: $ {item.price}</Text>\r\n        <Text style={styles.details}>Stock: {item.stock}</Text>\r\n      </View>\r\n      <TouchableOpacity style={[styles.button, styles.flex]} onPress={() => onSelected(item)}><Text style={styles.textButton}>Ver Detalle</Text></TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  Item: {\r\n    padding: '20px',\r\n    margin: '10px',\r\n    borderRadius: '3px',\r\n    backgroundColor: '#ccc',\r\n    width: '50%',\r\n    alignSelf: 'center',\r\n  },\r\n  title:{\r\n    fontSize: '20px',\r\n    fontFamily: 'sans-serif',\r\n    fontWeight: '600',\r\n    color: 'black',\r\n  },\r\n  details: {\r\n    fontSize: '18px',\r\n  },\r\n   button: {\r\n    paddingHorizontal: '0.75rem',\r\n    paddingVertical: '0.375rem',\r\n    borderRadius: '0.25rem',\r\n    textAlign: 'center',\r\n    backgroundColor: '#007bff',\r\n    borderColor: '#007bff',\r\n    width: '40%',\r\n    marginTop: '20px',\r\n  },\r\n  textButton: {\r\n    color: '#fff',\r\n    fontSize: '1rem',\r\n    lineHeight: '1.5',\r\n    fontWeight: '400',\r\n  },\r\n  flex: {\r\n    alignSelf: 'center',\r\n  }\r\n});\r\n\r\nexport default ProductoItem;","import React, {useState, useEffect} from 'react';\r\nimport { View } from 'react-native';\r\nimport ProductoItem from '../components/ProductoItem';\r\n\r\nconst Productos = ({navigation, route}) => {\r\n\r\n  const producto = route.params;\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setItems(producto.prod);\r\n  }, [])\r\n\r\n  const handleSelected = (item) => {\r\n    navigation.navigate('Details', {\r\n      productID: item.id,\r\n      name: item.title,\r\n      description: item.description,\r\n      price: item.price,\r\n      picture: item.pictureUrl\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <ProductoItem item={items} onSelected={handleSelected}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Productos;","import { StyleSheet } from 'react-native';\r\n\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#fff',\r\n    justifyContent: 'center',\r\n    maxWidth: '500px',\r\n    minWidth: '500px',\r\n    margin: 'auto',\r\n    padding: '50px',\r\n    borderRadius: '6px',\r\n    border: '1px solid lightgray',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    border: '1px solid #ced4da',\r\n    borderRadius: '0.25rem',\r\n    fontSize: '1rem',\r\n    lineHeight: '1.5',\r\n    color: '#495057',\r\n    border: '1px solid #ced4da',\r\n    paddingVertical: '0.375rem',\r\n    paddingHorizontal: '0.75rem',\r\n    marginTop: '5px',\r\n    marginBottom: '20px',\r\n    marginLeft: '0px',\r\n    marginRight: '0px',\r\n  },\r\n  button: {\r\n    paddingHorizontal: '0.75rem',\r\n    paddingVertical: '0.375rem',\r\n    borderRadius: '0.25rem',\r\n    textAlign: 'center',\r\n    backgroundColor: '#007bff',\r\n    borderColor: '#007bff',\r\n  },\r\n  buttonOrders: {\r\n    paddingHorizontal: '0.75rem',\r\n    paddingVertical: '0.375rem',\r\n    borderRadius: '0.25rem',\r\n    textAlign: 'center',\r\n    backgroundColor: '#007bff',\r\n    borderColor: '#007bff',\r\n    margin: '50px',\r\n    width: '50%',\r\n    alignSelf: 'center',\r\n  },\r\n  buttonDelete: {\r\n    paddingHorizontal: '0.75rem',\r\n    paddingVertical: '0.375rem',\r\n    borderRadius: '0.25rem',\r\n    textAlign: 'center',\r\n    backgroundColor: 'white',\r\n    borderColor: '#007bff',\r\n    borderWidth: 1,\r\n    marginTop: 20\r\n  },\r\n  textButton: {\r\n    color: '#fff',\r\n    fontSize: '1rem',\r\n    lineHeight: '1.5',\r\n    fontWeight: '400',\r\n  },\r\n   textButtonDelete: {\r\n    color: '#007bff',\r\n    fontSize: '1rem',\r\n    lineHeight: '1.5',\r\n    fontWeight: '400',\r\n  },\r\n  div: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n  },\r\n  text:{\r\n    fontFamily: '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"',\r\n    fontSize: '1rem',\r\n    fontWeight: '400',\r\n    lineHeight: '1.5',\r\n    color: '#212529',\r\n    textAlign: 'left',\r\n  },\r\n  title:{\r\n    fontFamily: '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"',\r\n    fontSize: '25px',\r\n    fontWeight: '700',\r\n    lineHeight: '1.5',\r\n    color: 'black',\r\n    textAlign: 'center',\r\n  },\r\n  textTitle: {\r\n    fontSize: '16px',\r\n    fontWeight: 600,\r\n  },\r\n  textEmail: {\r\n    fontSize: '16px',\r\n  },\r\n  pad10:{\r\n    marginTop: '20px',\r\n  },\r\n  cardText: {\r\n    color: 'chocolate',\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    marginLeft: '35px',\r\n    marginTop: '40px',\r\n  },\r\n  container2: {\r\n    width: '50%',\r\n    alignSelf: 'center',\r\n  },\r\n  item: {\r\n    border: '1px solid lightgray',\r\n    borderRadius: '4px',\r\n    padding: '15px',\r\n    marginLeft: '20px',\r\n  },\r\n  margin10: {\r\n    margin: '10px'\r\n  },\r\n  addItems: {\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n    width: '50%',\r\n    margin: 50,\r\n    alignSelf: 'center',\r\n  },\r\n  alertDanger: {\r\n    color: '#721c24',\r\n    backgroundColor: '#f8d7da',\r\n    borderColor: '#f5c6cb',\r\n    position: 'relative',\r\n    paddingVertical: '0.75rem ',\r\n    paddingHorizontal: '1.25rem',\r\n    marginBottom: '1rem',\r\n    borderWidth: '1px',\r\n    borderRadius: '0.25rem',\r\n    fontWeight: 600\r\n},\r\ncontainer3: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  titleDetail:{\r\n    fontSize: 20,\r\n    fontFamily: 'sans-serif',\r\n    marginBottom: 10,\r\n    fontWeight: '600',\r\n  },\r\n  imgDetail: {\r\n    width: '10%',\r\n    height: '20%',\r\n    resizeMode: 'contain',\r\n  },\r\n  marginLeft: {\r\n    marginLeft: 35,\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { View, Text, Image } from 'react-native';\r\nimport { styles } from '../../styles';\r\n\r\nconst Details = ({route}) => {\r\n    const item = route.params;\r\n  return (\r\n    <View style={styles.container3}>\r\n        <Text style={styles.titleDetail}>{item.name}</Text>\r\n        <Text>{item.description}</Text>\r\n        <Text>{item.price}</Text>\r\n        <Image style={styles.imgDetail} source={{uri: item.picture}} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Details","export const COLORS = {\r\n    primary: '#2D93AD',\r\n    secondary: '#aac0af',\r\n}","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport Home from '../../screens/Home';\r\nimport Productos from '../../screens/Productos';\r\nimport Details from '../../screens/Details';\r\nimport { COLORS } from '../../constants/color';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n        screenOptions={{\r\n            headerStyle: { backgroundColor: COLORS.primary },\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: { fontWeight: 'bold'}\r\n        }}\r\n    >\r\n        <Stack.Screen name=\"Home\" component={Home} options={{title: 'Tienda Online'}}/>\r\n        <Stack.Screen name=\"Productos\" component={Productos} options={({route}) => ({title: route.params.name})}/>\r\n        <Stack.Screen name=\"Details\" component={Details} />\r\n    </Stack.Navigator>\r\n);","import React, {useContext} from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { AppContext } from '../app/provider';\r\nimport { styles } from '../../styles';\r\n\r\nconst Car = ({ navigation }) => {\r\n\r\n  const [state, , , removeItem, , ,] = useContext(AppContext);\r\n  const producto = state ? state.map(item => ({ ...item, id: item.id, title: item.title, price: item.price})) : [];\r\n\r\n  const generateOrder = async () => {\r\n    const user = await getCurrentUser();\r\n    const order = {\r\n      buyer: user.email,\r\n      items: state,\r\n      total: getTotal(),\r\n      date: new Date().toLocaleString()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      {\r\n        producto.length === 0 ?\r\n        <View style={styles.addItems}>\r\n            <Text style={styles.alertDanger}>El carrito está vacío. Haga click en \"Tienda\" y agregue productos</Text>\r\n        </View> :\r\n        <View style={styles.container2}>\r\n          <Text style={styles.cardText}>Carrito de compra:</Text>\r\n          {\r\n            state.map( (item, i) =>\r\n               <View key={i} style={[styles.margin10, styles.item]}>\r\n                <Text style={styles.textTitle}>Nombre: {item.title}</Text>\r\n                <Text>Precio: {item.price}</Text>\r\n                <TouchableOpacity style={styles.buttonDelete} onPress={() => removeItem(item.id)}><Text style={styles.textButtonDelete}>Borrar item</Text></TouchableOpacity>\r\n              </View>              \r\n            )\r\n          }\r\n          <Text style={[styles.textTitle, styles.marginLeft]}>Total de la compra: ${state.reduce((acc, obj) => acc + obj.price, 0)}</Text>\r\n          <TouchableOpacity style={styles.buttonOrders} onPress={() => navigation.navigate('Ordenes')}>\r\n            <Text style={styles.textButton}>Generar orden de compra</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Car","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport Car from '../../screens/Car';\r\nimport { COLORS } from '../../constants/color';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n        screenOptions={{\r\n            headerStyle: { backgroundColor: COLORS.primary },\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: { fontWeight: 'bold'}\r\n        }}\r\n    >\r\n        <Stack.Screen name=\"Car\" component={Car} options={{title: 'Carrito de compras'}}/>\r\n    </Stack.Navigator>\r\n);","import { collection, getDocs, query, doc, getDoc, addDoc, deleteDoc, updateDoc, where, limit } from \"firebase/firestore\";\r\nimport { db } from './firebase';\r\n\r\nconst collectionName = 'orders';\r\nconst itemsCollection = collection(db, collectionName);\r\n\r\n// CREATE\r\nexport const createItem= (obj) => {\r\n    return addDoc(itemsCollection, obj).id;\r\n}\r\n\r\n// UPDATE\r\nexport const updateItem = async (id, obj) => {\r\n    await updateDoc(doc(db, collectionName, id), obj)\r\n}\r\n\r\n// READ\r\nexport const getItems= async ()  => {\r\n    const result = await getDocs(query(itemsCollection));\r\n    return result.docs.map(doc => {\r\n        return { ...doc.data(), id: doc.id };\r\n    });\r\n}\r\n\r\n// READ WITH WHERE\r\n// Tener en cuenta que el tipo de dato de la condición debe coincidir con el tipo de dato que hay en Firebase o no obtendré un dato de respuesta\r\nexport const getItemsByCondition = async (value) => {\r\n    const result = await getDocs(query(itemsCollection, where('age', '>', value)));\r\n    return result.docs.map(doc => {\r\n        return { ...doc.data(), id: doc.id };\r\n    });\r\n}\r\n\r\nexport const getItemByName = async (name) => {\r\n    const result = await getDocs(query(itemsCollection, where('nombre', '==', name), limit(1)));\r\n    const doc = result.docs[0];\r\n    return result.size !== 0 ? { ...doc.data(), id: doc.id} : {};\r\n}\r\n\r\nexport const getItemByCategory = async (id) => {\r\n    const result = await getDocs(query(itemsCollection, where('categoryId', '==', parseInt(id))));\r\n    return result.docs.map(doc => {\r\n        return { ...doc.data(), id: doc.id };\r\n    });\r\n}\r\n\r\nexport const getItemById = async (id) => {\r\n    const result = await getDoc(doc(db, collectionName, id));\r\n    return result.data();\r\n}\r\n\r\n// DELETE\r\nexport const deleteItem = async (id) => {\r\n    await deleteDoc(doc(collectionName, id));\r\n}","import { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from \"firebase/auth\";\r\nimport { auth } from \"./firebase\";\r\n\r\nexport const signUp = async (email, password) => {\r\n    return createUserWithEmailAndPassword(auth, email, password).then(async (userCredential) => {\r\n        const user = userCredential.user;\r\n        await setDoc(doc(db, 'users', user.uid),{});\r\n        return user.uid;\r\n    })\r\n}\r\n\r\nexport const signIn= async (email, password) => {\r\n        const result = await signInWithEmailAndPassword(auth, email, password);\r\n        return result.user.uid;\r\n}\r\n\r\nexport const getCurrentUserId = async () => await auth.currentUser?.uid;\r\nexport const getCurrentUser = async () => await auth.currentUser;\r\nexport const logout = async () => await signOut(auth);","import React, {useState, useContext} from 'react';\r\nimport { View, Text,TextInput, TouchableOpacity } from 'react-native';\r\nimport { createItem } from \"../app/orders-firebase\";\r\nimport { AppContext } from '../app/provider';\r\nimport { styles } from '../../styles';\r\nimport { getCurrentUser } from '../app/api';\r\n\r\nconst Orders = ({ navigation }) => {\r\n  \r\n  const [state,setState, addItem, removeItem, clear, isInCart, addToCart] = useContext(AppContext);\r\n  const arr = state ? state.map(item => ({ ...item, id: item.id, title: item.title, price: item.price})) : [];\r\n  const producto = state.map(item => ({ ...item, id: item.id, title: item.title, price: item.price}));\r\n  const user = getCurrentUser();\r\n\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState(0);\r\n  const [email, setEmail] = useState(0);\r\n\r\n  const emailUser = user.then(obj => setEmail(obj.email))\r\n\r\n    const ordenCompra = {\r\n    buyer: {\r\n      name: name,\r\n      phone: phone,\r\n      email: email\r\n    },\r\n    items: producto,\r\n    date: new Date(),\r\n  }\r\n  return (\r\n    <View style={styles.container2}>\r\n      <Text style={styles.cardText}>Datos del comprador</Text>\r\n      <View style={[styles.margin10, styles.item]}>\r\n        <TextInput style={styles.input} placeholder=\"Nombre\" onChangeText={(text) => setName(text)}/>\r\n        <TextInput style={styles.input} placeholder=\"Teléfono\" onChangeText={(text) => setPhone(text)}/>\r\n        <Text style={styles.textEmail}>Email del comprador: { email }</Text>\r\n      </View>\r\n      {\r\n        arr.length === 0 ?\r\n          <View style={styles.addItems}>\r\n            <Text style={styles.alertDanger}>No hay órdenes cargadas</Text>\r\n          </View> :\r\n          <View>\r\n            <Text style={styles.cardText}>Productos para la compra:</Text>\r\n            {\r\n              state.map((item,i) => \r\n                <View key={i} style={[styles.margin10, styles.item]}>\r\n                  <Text style={styles.textTitle}>Nombre: {item.title}</Text>\r\n                  <Text>Precio: {item.price}</Text>\r\n                </View>\r\n              )\r\n            }\r\n            <TouchableOpacity style={styles.buttonOrders} onPress={ () => createItem(ordenCompra)}>\r\n              <Text style={styles.textButton}>Comprar</Text>\r\n            </TouchableOpacity>\r\n          </View> \r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Orders","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport Orders from '../../screens/Orders';\r\nimport { COLORS } from '../../constants/color';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n        screenOptions={{\r\n            headerStyle: { backgroundColor: COLORS.primary },\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: { fontWeight: 'bold'}\r\n        }}\r\n    >\r\n        <Stack.Screen name=\"Ordenes\" component={Orders} options={{title: 'Orden de compra'}}/>\r\n    </Stack.Navigator>\r\n);","import React from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport Stacks from '../stacks/index';\r\nimport Tabs from '../stacks/CarNavigator';\r\nimport Orders from '../stacks/OrdersNavigator';\r\nimport { COLORS } from '../../constants/color';\r\nimport { logout } from '../../app/api';\r\nimport Provider from '../../app/provider';\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default () => (\r\n    <Tab.Navigator \r\n        screenOptions={{\r\n            tabBarShowLabel: false,\r\n            tabBarStyle: style.tabBar,\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: { fontWeight: 'bold'},\r\n            headerRight: (props) => {\r\n                return (\r\n                    <TouchableOpacity onPress={logout}>\r\n                        <View style={style.logout}>\r\n                            <Ionicons name=\"log-out\" size={30} color=\"#2D93AD\" />\r\n                            <Text style={style.textLogout}>Log out</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                );\r\n            }\r\n        }}>\r\n        <Tab.Screen name=\"Juegos Malabares\" component={Stacks}\r\n            options={{\r\n                tabBarIcon: ({focused}) => (\r\n                    <View style={style.item}>\r\n                        <Ionicons name=\"md-home\" size={30} color=\"#2D93AD\" />\r\n                        <Text>Tienda</Text>\r\n                    </View>\r\n                )  \r\n            }}\r\n        />\r\n        <Tab.Screen name=\"Carrito\" component={Tabs} \r\n            options={{\r\n                tabBarIcon: ({focused}) => (\r\n                    <View style={style.item}>\r\n                        <Ionicons name=\"cart\" size={30} color=\"#2D93AD\" />\r\n                        <Text>Carrito</Text>\r\n                    </View>\r\n                )\r\n            }}\r\n        />\r\n        <Tab.Screen name=\"Ordenes\" component={Orders} \r\n            options={{\r\n                tabBarIcon: ({focused}) => (\r\n                    <View style={style.item}>\r\n                        <Ionicons name=\"cart\" size={30} color=\"#2D93AD\" />\r\n                        <Text>Ordenes</Text>\r\n                    </View>\r\n                )\r\n            }}\r\n        />\r\n\r\n    </Tab.Navigator>\r\n);\r\n\r\nconst style = StyleSheet.create({\r\n    tabBar: {\r\n        shadowColor: 'gray',\r\n        shadowOffset: { width: 0, height: 10},\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 0.25,\r\n        elevation: 5,\r\n        position: 'absolute',\r\n        bottom: 25,\r\n        left: 20,\r\n        right: 20,\r\n        borderRadius: 15,\r\n        height: 90\r\n    },\r\n    item: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    logout: {\r\n        flexDirection: 'row',\r\n    },\r\n    textLogout:{\r\n        alignSelf: 'center',\r\n        marginRight: '30px',\r\n        marginLeft: '10px',\r\n        paddingBottom: '5px',\r\n    }\r\n});","import React, { useState} from 'react';\r\nimport { View,TextInput, TouchableOpacity, Text, } from 'react-native';\r\nimport { styles } from '../../styles';\r\nimport { signUp } from '../app/api';\r\n\r\nconst Register = ({navigation}) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  \r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Registro</Text>\r\n      <Text style={styles.text}>Email</Text>\r\n      <TextInput style={styles.input} keyboardType={\"email-address\"} onChangeText={(text) => setEmail(text)}></TextInput>\r\n      <Text style={styles.text}>Clave</Text>\r\n      <TextInput style={styles.input} onChangeText={(text) => setPassword(text)}></TextInput>\r\n      <TouchableOpacity style={styles.button} onPress={ async () => await signUp(email, password)}>\r\n        <Text style={styles.textButton}>Registrarme</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={[styles.button, styles.pad10]} onPress={ async () => navigation.navigate('Login')}>\r\n        <Text style={styles.textButton}>Ir a Login</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Register","import React, { useState} from 'react';\r\nimport { View,TextInput, TouchableOpacity, Text, } from 'react-native';\r\nimport { styles } from '../../styles';\r\nimport { signIn } from '../app/api';\r\n\r\nconst Login = () => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  return (\r\n     <View style={styles.container}>\r\n      <Text style={styles.title}>Login</Text>\r\n      <Text style={styles.text}>Email</Text>\r\n      <TextInput style={styles.input} keyboardType={\"email-address\"} onChangeText={(text) => setEmail(text)}></TextInput>\r\n      <Text style={styles.text}>Clave</Text>\r\n      <TextInput style={styles.input} onChangeText={(text) => setPassword(text)}></TextInput>\r\n      <TouchableOpacity style={styles.button} onPress={ async () => {\r\n        await signIn(email, password);\r\n      }}>\r\n        <Text style={styles.textButton}>Acceder</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport Register from '../../screens/Register';\r\nimport Login from '../../screens/Login';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n    screenOptions={{\r\n            headerShown: false,\r\n            tabBarShowLabel: false,\r\n        }}>\r\n        <Stack.Screen name=\"Registro\" component={Register} options={{title: 'Registro'}}/>\r\n        <Stack.Screen name=\"Login\" component={Login} options={{title: 'Login'}}/>\r\n    </Stack.Navigator>\r\n);","import React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n// import Main from './stacks/index';\r\nimport Bottom from './tabs/index';\r\nimport AuthNavigation from './stacks/auth';\r\nimport { auth } from '../app/firebase';\r\n\r\n// export default () => <NavigationContainer><Main /></NavigationContainer>\r\nconst Nav = () => {\r\n    const [isLogged, setIsLogged] = useState(false);\r\n\r\n    useEffect(() => {\r\n      onAuthStateChanged( auth, user => {\r\n        if(user){\r\n            setIsLogged(true);\r\n        } else {\r\n            setIsLogged(false);\r\n        }})\r\n    }, [])\r\n\r\n    return (\r\n        <NavigationContainer>\r\n            {\r\n                isLogged ? <Bottom /> : <AuthNavigation />\r\n            }\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\nexport default Nav;","import 'react-native-gesture-handler';\nimport React from 'react';\nimport Navigation from './src/navigation';\nimport Provider from './src/app/provider';\n\nconst App = () => <Provider><Navigation /></Provider>\n\nexport default App;\n"],"sourceRoot":""}